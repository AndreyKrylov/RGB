SET ThousandSep=' ';
SET DecimalSep=',';
SET MoneyThousandSep=' ';
SET MoneyDecimalSep=',';
SET MoneyFormat='# ##0,00р.;-# ##0,00р.';
SET TimeFormat='h:mm:ss';
SET DateFormat='DD.MM.YYYY';
SET TimestampFormat='DD.MM.YYYY h:mm:ss[.fff]';
SET MonthNames='янв;фев;мар;апр;май;июн;июл;авг;сен;окт;ноя;дек';
SET DayNames='Пн;Вт;Ср;Чт;Пт;Сб;Вс';
 
 vDateStart		= Date('01.01.2013');
 vDateEnd		= Date(MonthStart(AddMonths(Today(), 6))); 
 vDateSplit		= MonthStart(AddMonths(WeekStart(Date(Today() + If(Num(WeekDay(Today())) = 6, 1, 0))), - 3));
 vDateAdd		= Date(Today()-20); 

 vLoadType		= If(vList.LoadType = 'Default' or IsNull(vList.LoadType), Pick(Match(-1, Num(WeekDay(Today())) = 6 and Hour(Now()) < 8, Num(WeekDay(Today())) = 6 or Hour(Now()) < 8, -1), 'Full', 'Night', 'Day'), vList.LoadType);
 vLoadFlag		= If(vLoadType = 'Full', '*', 2);
 
 vNotEmpty 		= 'Len($1) > 0 and $1 <> 0 and $1 <> ''01.01.1753 0:00:00''';
 vGpsConvert 	= 'Round( Floor($1 / 100) + ((($1 - (Floor($1 / 100) * 100)) - Floor($1 - (Floor($1 / 100) * 100))) + Floor($1 - (Floor($1 / 100) * 100)))/60 , 0.00001)';
 vGpsDistance 	= 'Round((3958.75 * acos( sin(Широта / 57.2958) * sin(кпкШирота / 57.2958) + cos(Широта / 57.2958) * cos(кпкШирота / 57.2958) * cos(кпкДолгота / 57.2958 - Долгота / 57.2958))) * 1609.344)';
 vConString		= 'OLEDB CONNECT TO [Data Source='& vServer &'; Initial Catalog='& vBaseName &'; User ID='& vLogin &'; Password='& vPassword &'; Provider=SQLOLEDB.1; Persist Security Info=True; Use Procedure for Prepare=1; Auto Translate=True; Packet Size=4096; Workstation ID=QLIKVIEW; Use Encryption for Data=False; Tag with column collation when possible=False]; SQL SET TRANSACTION ISOLATION LEVEL  READ UNCOMMITTED;';
 vSelected 		= 'GetSelectedCount([$1]) > 0 and Index(''|'' & Concat([$1], ''|'') & ''|'', ''|'' & ''$2'' & ''|'') > 0'; 

 vCheckTable	= 'IF Len(Trim(vTABLE)) = 0 THEN; vTABLE = TableName(NoOfTables() - 1); ENDIF;'; // ELSEIF IsNull(TableNumber(vTABLE)) THEN;
// vTrace			= 'IF Len(Trim(''$2'')) = 0 THEN; TRACE '& Repeat('-', 40) &' $1; ELSE; TRACE '& Repeat('$2', 40) &' $1; ENDIF;';
 vTrace			= 'IF ''$2'' = ''$'' & ''2'' THEN; TRACE '& Repeat('-', 40) &' $1; ELSE; TRACE '& Repeat('$2', 40) &' $1 '& Repeat('$3', 40) &'; ENDIF;';
//*********************************************************************************************************************************************************
//	01.	Выгрузка данных "vObject" из SQL базы 1С используя готовые метаданные. vParam - приведение дат к формату без времени.
//	vSelectType: если Справочник - vSelectType = vHierarchy (иерархия справочника), если Регистр или Документ - vParam = vLimitDate (ограничение загрузки по периоду). 
//  vLimitDate: 0 - нет, 1 - по умолчанию, Полученный Интервал. vMarked - контроль удаленности. vStore - сохранение.
//*********************************************************************************************************************************************************
SUB Select(vOBJECT, vSELECT, vSTORE, 	vTable,i,vSelectNo,vSelectType,vParam,vMarked,vStore,vTableSql,vTable1C,vTable1C_2,vGeneric,vНазначение,vMarkedField,vMarked,vHierarchy,vDateField,vJoinTypesvPartLoad,vString,vJoinCount,vJoinString,vJoinNo,vJoinEnumes,vТипРеквизита,vJoinTables,vJoinField,j,vJoinTable,vJoinTableName,vJoinType,vFieldName,vField,vLoop,vObjectPart,vLimitDate,vDateComment,vDateLimit,vLimitField,vAddDate,vJoinPrefix,vComments,vBoolList,vСиноним,vPartLoad,vСиноним,vJoinTypes,vTypeFields) 
	NoConcatenate [Table.MetaData]: LOAD ИмяТаблицыQV, ИмяПоля, ИмяПоляQV, Синоним, Представление, ИмяХранения, ТипРеквизита, ИмяХраненияТипа, КолТипов, #Select1, Select0 as #Select0, Объект, Назначение, Комментарий, КоличествоСтрок, Префикс Resident MetaTable Where [ИмяТаблицыQV] = '$(vOBJECT)'; 
	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	//  vTableSql - название таблицы в SQL. vTable1C - название в 1С. vString - строка между Select и From. vJoinString - строка соединения после From.
	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	vSelectNo		= '#Select' & If(Len(Trim(vSELECT)) = 0, 1, vSELECT);
	vSelectType		= 			Lookup(vSelectNo, 		'Представление', vOBJECT, [Table.MetaData]);
	vMarked			= If(Len(vMarked) = 0, 		If(vOBJECT like 'Регистр*', 1, 0),	vMarked);
	vStore			= If(Len(vSTORE) = 0, 		1, 									vSTORE);

	vTableSql 		= 			Lookup('ИмяХранения', 	'Представление', vOBJECT, [Table.MetaData]); 
	vTable1C 		= Replace(	Lookup('ИмяПоляQV', 	'Представление', vOBJECT, [Table.MetaData]), '.', '');
	vTable1C_2 		= 			Lookup('ИмяПоляQV', 	'Представление', vOBJECT, [Table.MetaData]); 
	vGeneric		= 			Lookup('Разворот', 		'Представление', vOBJECT, [Table.MetaData]);
	vНазначение		= 			Lookup('Назначение', 	'Представление', vOBJECT, [Table.MetaData]);
	vMarkedField	= If(Len(Lookup('ИмяПоляQV', 'ИмяХранения', '_Marked', [Table.MetaData])) > 0, '_Marked', If(Len(Lookup('ИмяПоляQV', 'ИмяХранения', '_Active', [Table.MetaData])) > 0, '_Active', ''));
	vMarked			= If(vMarked and Len(vMarkedField) > 0, '$(vTable1C).$(vMarkedField) = 1', '1=1'); 
	vHierarchy 		= If(vOBJECT like 'Справочник.*' and vНазначение = 'Основная' and Len(Lookup('ИмяТаблицыQV', 'ИмяПоля', 'Родитель', [Table.MetaData])) > 0 and Len(Lookup('ИмяТаблицыQV', 'ИмяПоля', 'Наименование', [Table.MetaData])) > 0 and vSelectType, 'Hierarchy($(vTable1C).Ссылка, $(vTable1C).Родитель.Ссылка, $(vTable1C).Наименование,,$(vTable1C).Наименование, ''$(vTable1C).Путь'', ''@'')', '');
	vDateField  	= If(Lookup('Представление', 'ИмяХранения', '_Period', [Table.MetaData]) > 0 and vНазначение = 'Основная', '$(vTable1C)._Period', If(Lookup('Представление', 'ИмяХранения', '_Date_Time', [Table.MetaData]) > 0 and vНазначение = 'Основная', '$(vTable1C)._Date_Time', '')); // If(vOBJECT like 'Документ.*', SubField(vOBJECT, '.', 2) & '._Date_Time', ''));
	vDateField  	= If(vOBJECT like 'Документ.*' and vНазначение = 'ТабличнаяЧасть', SubField(vOBJECT, '.', 2) & '._Date_Time', vDateField);
	vPartLoad		= If(not vOBJECT like 'Справочник.*' and Len(vDateField) > 0, vSelectType, 0)

	vString 		= '';	// Строка запроса с названиями полей
	vJoinString		= '';	// Строка запроса для присоединения таблиц
	vJoinEnumes		= '';	// Список полей с присоединяемыми перечислениями
	vJoinTypes		= '';	// Список полей с присоединяемыми перечислениями
	vTypeFields		= '';	// Список полей с индексами таблииц для дальнейшей рсшифровки 
	vJoinTables		= '1';	// Список присоедияемых таблиц на случай повторений
	vJoinNo 		= 0;	// Нумератор для присоединяемых таблиц на случай повторений
	vComments		= ''; 	// Строка комментариев 

	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	//  vJoinTable - присоединяемая таблица в SQL. vJoinTableName - она же в 1С. vJoinType - тип соединения. vField - поле в SQL. vFieldName - поле в 1С.
	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	vAddDate		= 'Case when DateAdd(Year, [Offset], ''17530101'') > $1 then $1 else DateAdd(Year, -[Offset], $1) end';
	FOR i = 0 to NoOfRows('Table.MetaData') 
		IF Peek(vSelectNo, $(i)) >= 0 and Len(Trim(Peek('Префикс', $(i), [Table.MetaData]))) > 0 THEN // like '-*'
		
			vParam			= Peek(vSelectNo, 			$(i), [Table.MetaData]);
			vТипРеквизита	= Peek('ТипРеквизита', 		$(i), [Table.MetaData]);
			vСиноним		= Peek('Синоним', 			$(i), [Table.MetaData]); 
			
			vJoinCount		= Peek('КолТипов', 			$(i), [Table.MetaData]);
			vJoinTable 		= Peek('ИмяХраненияТипа', 	$(i), [Table.MetaData]);
			vJoinTableName	= SubField(vТипРеквизита, '.', 2);
			vJoinNo			= SubStringCount('$(vJoinTables)', Chr(39) & vJoinTableName & Chr(39)) + 1;
			vJoinPrefix		= If(vJoinTableName = vTable1C or vJoinNo > 1, '#$(vJoinNo)', '');
			vJoinType		= If(WildMatch(Peek('ИмяПоляQV', $(i), [Table.MetaData]), '*.Ссылка'), vParam, 0); 
			IF vJoinType > 1 and vТипРеквизита like 'Справочник.*' THEN; [JoinTest]: LOAD ИмяХранения Resident MetaTable Where ИмяТаблицыQV = '$(vТипРеквизита)' and ИмяХранения = '_Description'; vJoinType = If(NoOfRows('JoinTest') > 0, vJoinType, 0); DROP Table [JoinTest]; ENDIF;
			vJoinField		= vJoinPrefix & vJoinTableName & If(Match(vТипРеквизита, 'Справочник.НомераГТД', 'Справочник.СерийныеНомераНоменклатуры'), '._Code', If(WildMatch(vТипРеквизита, 'Справочник*', 'ПланВидовХарактеристик*', 'ПланВидовРасчета*'), '._Description', If(vТипРеквизита like 'Перечисление*', '._EnumOrder', ''))); 

			vBoolList 		= If(WildMatch(vJoinTable, '*;*'), vJoinTable, 'Да;Нет')

			vFieldName		= Peek('ИмяПоляQV', $(i), [Table.MetaData]); 
			vField			= vTable1C & '.' & Peek('ИмяХранения', $(i), [Table.MetaData]); 
			vField 			= If( vТипРеквизита = 'Дата', If(vParam > 0, 'case when $(vField) = ''01.01.1753 0:00:00'' then '''' else replace(convert(varchar, $(vAddDate($(vField))), 103), '&chr(39)&'/'&chr(39)&', '&chr(39)&'.'&chr(39)&') end', '$(vAddDate($(vField)))'), '$(vField)'); 
			vField 			= If( vТипРеквизита = 'Булево' and vParam > 0, 'case when $(vField) = 1 then '&Chr(39)& SubField(vBoolList, ';', 1) &Chr(39)&'  when $(vField) = 0 then '&Chr(39)& SubField(vBoolList, ';', 2) &Chr(39)&' end', vField);
			vField 			= If( WildMatch(vField, '*TRef', '*_TYPE') and not vField like '*._Type', 'cast($(vField) as int)', vField);
			vField 			= If( Peek('ИмяПоля', $(i), [Table.MetaData]) = 'ВидДвижения', 'case when $(vField) = 1 then -1  when $(vField) = 0 then +1 end', vField);

	    	vString 		= vString 		& ', '&chr(13)& If($(vJoinType) > 1 and vJoinCount = 1, vJoinField, '$(vField)') & ' as [' & If($(vJoinType) = 1, '$(vJoinTableName).Ссылка', If($(vJoinType) > 1 and vJoinCount = 1, SubField(vFieldName, '.Ссылка', 1), vFieldName)) & ']';
	    	vString 		= vString 		& If($(vJoinType) = 3 and vJoinCount = 1, ', '&chr(13)& '$(vField) as [$(vFieldName)]', '');
	    	vString 		= vString 		& If($(vParam) 	  = 2 and WildMatch(vFieldName, '*.Дата', '*.Период'), ', '&chr(13)& vTable1C & '.' & Peek('ИмяХранения', $(i), [Table.MetaData]) & ' as [$(vFieldName)Время]', '');
	    	vJoinString		= vJoinString 	& If($(vJoinType) > 1 and vJoinCount = 1, chr(13) &' Left Join $(vJoinTable) as $(vJoinPrefix)$(vJoinTableName) with (nolock) on $(vField) = $(vJoinPrefix)$(vJoinTableName)._IDRRef ', ''); 
	    	vJoinTables		= vJoinTables 	& If($(vJoinType) > 1 and vJoinCount = 1, ', ' & Chr(39) & vJoinTableName & Chr(39) );
	    	vJoinEnumes		= vJoinEnumes 	& If($(vJoinType) > 1 and vJoinCount = 1 and vТипРеквизита like 'Перечисление*', ', ' & vТипРеквизита & '-' & Replace(vFieldName, '.Ссылка', '') ); 
	    	vJoinTypes		= vJoinTypes 	& If($(vParam) 	  = 1 and vFieldName like '*.Тип', ', ' & vFieldName); 
			vTypeFields		= vTypeFields 	& If(vField like '*TRef', ', ' & vFieldName);
			vComments 		= vComments 	& Chr(13) & 'COMMENT Field '& If($(vJoinType) = 1, '$(vJoinTableName).Ссылка', vFieldName) &' With '''& 'Тип: ' & vТипРеквизита &Chr(13)& 'Синоним: ' & vСиноним &''';';
			vComments 		= vComments 	& If($(vJoinType) >= 2, Chr(13) & 'COMMENT Field '& SubField(vFieldName, '.Ссылка', 1) &' With '''& 'Тип: Строка' &Chr(13)& 'Синоним: ' & vСиноним &''';', '');
	    ENDIF 
	NEXT; 
	vJoinNo			= SubStringCount('$(vJoinTables)', Chr(39) & SubField(vOBJECT, '.', 2) & Chr(39)) + 1; vJoinPrefix = If(vJoinNo > 1, '#$(vJoinNo)', '');
	vJoinString		= vJoinString & If(vOBJECT like 'Справочник.*' and vНазначение = 'ТабличнаяЧасть', chr(13) &' Full Join _'& SubField(vTableSql, '_', 2) &' as '& vJoinPrefix & SubField(vOBJECT, '.', 2) &' with (nolock) on $(vTable1C)._'& SubField(vTableSql, '_', 2) &'_IDRRef = '& vJoinPrefix & SubField(vOBJECT, '.', 2) &'._IDRRef ', '');
	vJoinString		= vJoinString & If(vPartLoad and vOBJECT like 'Документ.*' and vНазначение = 'ТабличнаяЧасть', chr(13) &' Inner Join _'& SubField(vTableSql, '_', 2) &' as '& SubField(vOBJECT, '.', 2) &' with (nolock) on $(vTable1C)._'& SubField(vTableSql, '_', 2) &'_IDRRef = '& SubField(vOBJECT, '.', 2) &'._IDRRef ', '') &Chr(13)& ',[_YearOffset]' &Chr(13);
	vString 		= right(vString, len(vString) - 1) & If(vOBJECT like 'Документ.*' and vНазначение = 'ТабличнаяЧасть' and vPartLoad, ', '&chr(13)& 'replace(convert(varchar, $(vAddDate($(vDateField))), 103), '&chr(39)&'/'&chr(39)&', '&chr(39)&'.'&chr(39)&') as [$(vTable1C_2).Дата]', '') &Chr(13); 
	vString 		= If(vOBJECT like 'Справочник.*' and vНазначение = 'ТабличнаяЧасть', Replace(vString, ', '&chr(13)&'$(vTable1C)._'& SubField(vTableSql, '_', 2) &'_IDRRef as ', ', '&chr(13)&'Isnull($(vTable1C)._'& SubField(vTableSql, '_', 2) &'_IDRRef, '& vJoinPrefix & SubField(vOBJECT, '.', 2) &'._IDRRef) as '), vString);
	DROP Tables [Table.MetaData]; 
	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	//  Выгрузка. Удаление таблицы метаданных, пустых колонок и переменных. vStore - разбиение загрузки и сохранение(0,1 - для справочников. 2,3 - для документов). vLoop - количество частей. 
	//-----------------------------------------------------------------------------------------------------------------------------------------------------
	vLoop 			= If(vPartLoad and vStore, 0, 2); 
	vObjectPart 	= '';
	vLimitDate 		= '';
	vLimitField		= '';
	vDateComment	= '';
	vTable 			= vOBJECT;
	DO; 
		IF vPartLoad THEN 
			vLimitField				= If(vOBJECT like 'Документ.*' and vНазначение = 'ТабличнаяЧасть', '$(vTable1C_2).Дата', Replace(Replace(vDateField, '_Date_Time', 'Дата'), '_Period', 'Период'));
			vLoop 					= If(vLoadType = 'Full', vLoop, 1); 
			IF vLoadType <> 'Day' and vLoop = 1 THEN; 
				IF not IsNull(FileTime('$(vQvdFolder)$(vOBJECT) 1.qvd')) THEN
					QvdTableHeader: LOAD Comment FROM [$(vQvdFolder)$(vOBJECT) 1.qvd] (XmlSimple, Table is [QvdTableHeader]);
					vDateComment 	= Alt(Date(SubField(SubField(Peek('Comment'), 'SplitDate: ', 2), Chr(13), 1)), 'Not valid date'); DROP Table QvdTableHeader;
					IF vDateComment = 'Not valid date' THEN;
						QvdFieldHeader: LOAD Comment FROM [$(vQvdFolder)$(vOBJECT) 1.qvd] (XmlSimple, Table is [QvdTableHeader/Fields/QvdFieldHeader]) Where FieldName = '$(vLimitField)';
						vDateComment 	= Alt(Date(Peek('Comment')), Date(Date#(Peek('Comment'), 'YYYYMMDD')), 'Not valid date'); DROP Table QvdFieldHeader; 
					ENDIF
				ENDIF
			ENDIF			
			vDateLimit				= Alt(If(vDateComment < vDateSplit, vDateComment, vDateSplit), vDateSplit); 												//TRACE ========= vDateLimit - $(vDateLimit), vDateSplit = $(vDateSplit);
			vObjectPart				= If(vLoop = 0, ' 1', ' 2');
			vTable 					= vOBJECT & vObjectPart; 
			vLimitDate 				= ' and $(vAddDate($(vDateField)))' & If(vLoop = 0, ' < ', ' >= ') & Chr(39) & Date(If(vLoadType = 'Day' and not IsNull(QvdCreateTime('$(vQvdFolder)$(vTable).qvd')), vDateAdd, vDateLimit), 'YYYYMMDD') & Chr(39);
			vLoop 					= vLoop + 1;
		ENDIF

		[$(vTable)]: $(vHierarchy) SELECT $(vString)From $(vTableSql) as $(vTable1C) with (nolock)$(vJoinString)Where $(vMarked) $(vLimitDate); $(vComments);
	
		IF vPartLoad 					THEN; COMMENT Table [$(vTable)] With 'SplitDate: $(vDateLimit)';														ENDIF; //COMMENT Field $(vLimitField) With '$(vDateSplit)'; 
		IF (Len(vGeneric) > 0 or Match(SubField(vOBJECT, '.', 3), 'ДополнительныеРеквизиты', 'КонтактнаяИнформация')) and not Match(SubField('$(vOBJECT)', '.', 2), 'НаборыДополнительныхРеквизитовИСведений', 'СоглашенияСКлиентами')  THEN
			vAtribute	= Trim(If(Len(vGeneric) > 1, SubField(vGeneric, ',', 1), If(SubField(vOBJECT, '.', 3) = 'ДополнительныеРеквизиты', 'Свойство', 'Вид') ));
			vValue	 	= Trim(If(Len(vGeneric) > 1, SubField(vGeneric, ',', 2), If(SubField(vOBJECT, '.', 3) = 'ДополнительныеРеквизиты', 'Значение', 'Представление') ));
			CALL GenericTable('$(vOBJECT)', SubField(vTable1C_2, '.', 1) & '.Ссылка', '$(vTable1C_2)' & '.' & '$(vAtribute)',  '$(vTable1C_2)' & '.' & '$(vValue)', '1')
		ENDIF // 
		IF NoOfRows('$(vTable)') > 0 THEN
			IF Len(vJoinEnumes) > 0 		THEN; CALL AddEnumes		('$(vTable)', '$(vJoinEnumes)', '$(vJoinTables)'); 											ENDIF 
			IF Len(vJoinTypes)  > 0 		THEN; CALL AddTypes			('$(vTable)', '$(vJoinTypes)'); 															ENDIF 
			IF Len(vTypeFields) > 0 		THEN; CALL AddObjectType	('$(vTable)', If(vOBJECT like 'Регистр*', 1, 0), Right(vTypeFields, Len(vTypeFields) - 2)); ENDIF
			IF vOBJECT like 'Справочник.*' 	THEN; CALL FillEmptyValues	('$(vTable)'); 																				ENDIF
			IF not vPartLoad 				THEN; CALL DropNullFields	('$(vTable)'); 																				ENDIF
			IF 0 							THEN; CALL DropEmptyFields	('$(vTable)'); 																				ENDIF
			IF vStore 						THEN; CALL Store			('$(vTable)', '1', If(vPartLoad and vLoadType = 'Day', '$(vLimitField)', 0)); 				ENDIF
		ENDIF
	LOOP WHILE vLoop < 2
	CALL DropVars('vOBJECT, vSELECT, vSTORE');
ENDSUB 
//*********************************************************************************************************************************************************
// 	02.	Удаление пустых колонок. 
//*********************************************************************************************************************************************************
SUB DropEmptyFields(vTABLE,  vFieldNo,vShift); vShift = 0;
	FOR vFieldNo = 1 to NoOfFields('$(vTABLE)'); vField = FieldName(vFieldNo - vShift, '$(vTABLE)'); [CheckTable]: LOAD 1 as CheckField Resident [$(vTABLE)] Where Len(Trim([$(vField)])) > 0;  
	IF NoOfRows('CheckTable') = 0 THEN; DROP FIELD [$(vField)] FROM [$(vTABLE)]; vShift = vShift +1; ENDIF; DROP TABLE [CheckTable]; NEXT; 
ENDSUB
//*********************************************************************************************************************************************************
// 	03.	Удаление колонок со значением NULL. 
//*********************************************************************************************************************************************************
SUB DropNullFields(vTABLE,  vFieldNo,vShift); vShift = 0;
	FOR vFieldNo = 1 to NoOfFields('$(vTABLE)'); vField = FieldName(vFieldNo - vShift, '$(vTABLE)'); IF Alt(FieldValueCount('$(vField)'), 0) <= 0 THEN; DROP Field [$(vField)] FROM [$(vTABLE)]; vShift = vShift +1; ENDIF; NEXT; 
ENDSUB
//*********************************************************************************************************************************************************
// 	04.	Разворот вертикальных значений свойств в горизонтальные колонки таблицы vTable. vKey - ключевое поле. vAttribute - свойство. vValue - значение. vModifier - исправление названий полученых полей.
//*********************************************************************************************************************************************************
SUB GenericTable(vTABLE, vKey,vAttribute,vValue,vModifier,vListOfTables,vBaseName); $(vCheckTable);
	vString = vValue; 	//	Соединение колонок значений если их несклько с разными типами (фомируем выражение для соединения)
	IF SubField(vTABLE, '.', 3) like 'ДополнительныеРеквизиты' THEN
		vField		= Mid(vTABLE, Index(vTABLE, '.') + 1) & '.Значение'; //SubField(vTABLE, '.', 2) & '.Значение';		
		vString 	= 'If([$(vField).TYPE] = 2, [$(vField).L], If([$(vField).TYPE] = 3, [$(vField).N], If([$(vField).TYPE] = 4, [$(vField).T], If([$(vField).TYPE] = 5, [$(vField).S], If([$(vField).TYPE] = 8, [$(vField)' & if(FieldNumber(vField, vTABLE) > 0, '', '.Ссылка') & '])))))'; //RRRef' & If(FieldNumber('$(vField).RRRef.Ссылка', vTABLE) > 0, '.Ссылка', '') & '])))))';
	ENDIF;  			//	Разбиение таблицы внутренней командой на несколько (по одному свойству в каждой).
	[Generic_1]: Generic LOAD  $(vKey), $(vAttribute), $(vString) as [$(vValue)] Resident $(vTABLE) Where Len([$(vAttribute)]) > 0; 
   	vListOfTables=;		//	Формирование переменной со списком полученных таблиц.
   	FOR vTableNo = 0 to NoOfTables(); vTableName = TableName($(vTableNo)); IF Subfield(vTableName,'.', 1) = 'Generic_1' THEN; vListOfTables = vListOfTables & If(Len(vListOfTables)>0,',') & Chr(39) & vTableName & Chr(39); ENDIF; NEXT
  	vBaseName	= Mid(vTABLE, Index(vTABLE, '.', 1) +1); //	Загрука в новую таблицу ключевого поля и присоединение таблиц из списка. vModifier - исправление названий полученых полей.
  	[Generic_2]: LOAD distinct $(vKey) Resident $(vTABLE); DROP Table [$(vTABLE)]; 
   	FOR Each vTableName in $(vListOfTables); IF Len(vBaseName) > 0 THEN; 
		FOR i = 1 to NoOfFields('$(vTableName)'); vFieldName = FieldName($(i),'$(vTableName)'); IF vFieldName <> vKey THEN; 
			vField		= If(WildMatch(vFieldName, '*дата*', '*период*'), 'Date([$(vFieldName)])', '[$(vFieldName)]');
			IF vModifier and vFieldName <> vKey THEN; CALL JoinWords('$(vFieldName)'); vFieldName = vJoinWords; vJoinWords = Null(); ENDIF;  
			vRename 	= If(vFieldName <> vKey, ', $(vField) as [$(vBaseName).$(vFieldName)]'); 
			vComments 	= vComments &Chr(13)& 'COMMENT Field [$(vBaseName).$(vFieldName)] With '''& 'Тип: Строка' &Chr(13)& 'Синоним: ' & vFieldName &''';';
		ENDIF; NEXT;
		Left Join ([Generic_2]) Load $(vKey) $(vRename) Resident [$(vTableName)]; 
	ENDIF; DROP Table [$(vTableName)]; NEXT;
  	CALL DropNullFields('Generic_2'); RENAME Table [Generic_2] to $(vTABLE); $(vComments);
ENDSUB   
//*********************************************************************************************************************************************************
//	05.	Соединение таблиц "vTable_1" и "vTable_2" по полям "vField_1" и "vField_2". Если нет "vField_2", то "vField_2" = "vField_1". 
//*********************************************************************************************************************************************************
SUB LeftJoin(vTABLE, vSTRING, vDELETE,   vNoOfRowsAfter,vNoOfRowsBefore,vDropTable) 
	vNoOfRowsBefore = NoOfRows('$(vTABLE)'); Left Join([$(vTABLE)]) $(vSTRING); vNoOfRowsAfter 	= NoOfRows('$(vTABLE)') - vNoOfRowsBefore;
	IF vNoOfRowsAfter <> 0 THEN; TRACE;TRACE	?	Количество строк в  $(vTABLE)  изменилось на $(vNoOfRowsAfter)!!!; TRACE; ENDIF
	vDropTable = Trim(Right(vSTRING, Len(SubField(Lower(vSTRING), If(SubStringCount(Lower(vSTRING), ' resident ') > 0, ' resident ', ' from '), 2)))); vDropTable = PurgeChar(Trim(SubField(vDropTable, If(Left(vDropTable, 1) = '[', ']', ' '), 1)), '[');
	IF vDELETE and NoOfRows('$(vDropTable)') > 0 THEN; DROP Table [$(vDropTable)]; ENDIF; CALL DropVars('vTABLE, vSTRING, vDELETE'); 
ENDSUB
//*********************************************************************************************************************************************************
//	06.	Сворачивание таблицы vTable по максимальному (минимальному) значению поля vField. 
//*********************************************************************************************************************************************************
//SUB MinMaxValue(vTable, vField, vType)
//	vString = ''; 
//	FOR vCounter = 1 TO NoOfFields('$(vTable)')  
//	    vCurrentField = FieldName($(vCounter), '$(vTable)');
//	    IF vCurrentField <> vField THEN 
//		    vString = vString & ', [$(vCurrentField)]';
//		ENDIF 
//	NEXT 
//	vString_2 = Right(vString, Len(vString) - 2); 
//	[$(vTable)_2]: NoConcatenate LOAD $(vType)($(vField)) as [$(vField)] $(vString) Resident [$(vTable)] Group By $(vString_2); 
//	DROP Table [$(vTable)]; RENAME Table [$(vTable)_2] to [$(vTable)]; vString = Null(); vString_2 = Null();
//ENDSUB
//*********************************************************************************************************************************************************
//	08.	Переименовывание поля vOldField на vNewField в таблице vTable. 
//*********************************************************************************************************************************************************
//SUB RenameField_(vOldField, vNewField, vTable)
//	IF FieldNumber(vNewField, vTable) > 0 THEN; DROP Field [$(vNewField)] From [$(vTable)]; ENDIF
//	[TempTable]: LOAD Distinct [$(vOldField)] Resident [$(vTable)];
//	Left Join([$(vTable)]) LOAD [$(vOldField)], [$(vOldField)] as [$(vNewField)] Resident [TempTable]; 
//	DROP Table [TempTable]; DROP Field [$(vOldField)] From [$(vTable)];
//ENDSUB
SUB RenameField(vOldField, vNewField, vTable)
	vNewField = If(Match(0, Len(Trim(vNewField)), vNewField), Capitalize(Left(vOldField, 1))&Right(vOldField, Len(vOldField)-1), vNewField); 
	IF Len(Trim(vTable)) > 0 THEN 
		IF FieldNumber(vNewField, vTable) > 0 THEN; DROP Field [$(vNewField)] From [$(vTable)]; ENDIF
		[TempTable]: LOAD Distinct [$(vOldField)] Resident [$(vTable)];
		Left Join([$(vTable)]) LOAD [$(vOldField)], [$(vOldField)] as [$(vNewField)] Resident [TempTable]; 
		DROP Table [TempTable]; DROP Field [$(vOldField)] From [$(vTable)];
	ELSE; IF not IsNull(FieldValueCount('$(vNewField)')) THEN; DROP Field [$(vNewField)]; ENDIF; RENAME Field [$(vOldField)] to [$(vNewField)]; ENDIF; 
	CALL DropVars('vOldField, vNewField, vTable'); 	
ENDSUB
//*********************************************************************************************************************************************************
//	09.	Переименовывание таблицы vOldTable на vNewTable. 
//*********************************************************************************************************************************************************
SUB RenameTable(vOLD, vNEW); //TRACE >>>>>>>>>>>>>>>>>>>>>>   RenameTable; 
	vOLD = If(Match(0, Len(Trim(vOLD)), vOLD), TableName(NoOfTables() - 1), vOLD); //TRACE ===========================   $(vOLD); 
	vNEW = If(Match(0, Len(Trim(vNEW)), vNEW), If(Left(vOLD, 1) = Lower(Left(vOLD, 1)), Capitalize(Left(vOLD, 1)) & Right(vOLD, Len(vOLD)-1), If(Match(Left(vOLD, 1), '_', '#', '@', '$'), Right(vOLD, Len(vOLD)-1))), vNEW);  //TRACE >>>>>>>>>>>>>>>>>>>>>>   $(vOLD)  $(vNEW); 
	IF vOLD >= 0 and vOLD <> vNEW THEN; IF NoOfRows(vNEW) >= 0 THEN; DROP Table [$(vNEW)]; ENDIF; RENAME Table [$(vOLD)] to [$(vNEW)]; ENDIF; CALL DropVars('vOLD,vNEW'); 
ENDSUB
//*********************************************************************************************************************************************************
//	12.	Сохранение таблицы vTable и удаление vRemove. 
//*********************************************************************************************************************************************************
SUB Store(vTABLE, vREMOVE, vDATEFIELD, vNEWTABLE, 	vDateField,vNewTable,vCounter,vCurField,vDate); TRACE ------------------- Store; $(vCheckTable);
	vNewTable 		= If(Len(vNEWTABLE) = 0 or vNEWTABLE = 0, vTABLE, vNEWTABLE);
	IF vDATEFIELD or Len(Trim(vDATEFIELD)) > 1 THEN;  TRACE ------------------- Store 2;
		vDate 		= vDateAdd;	
		vDateField	= vDATEFIELD;
		IF vTABLE like '#*' THEN
			vDate 	= vDateSplit;
			FOR vCounter = 1 to NoOfFields('$(vTABLE)')  
			    vCurField = FieldName($(vCounter), '$(vTABLE)'); IF WildMatch(vCurField, '*.Период', '*.Дата') 	THEN; vDateField = vCurField; ENDIF 
			NEXT
		ENDIF
		IF not IsNull(QvdCreateTime('$(vQvdFolder)$(vTABLE).qvd')) THEN; [$(vTABLE)]: LOAD * From [$(vQvdFolder)$(vTABLE).qvd] (qvd) Where [$(vDateField)] < '$(vDate)'; ENDIF
	ENDIF;  TRACE ------------------- Store $(vTABLE);
	IF NoOfRows('$(vTABLE)') > 0 THEN; STORE [$(vTABLE)] into [$(vQvdFolder)$(vNewTable).qvd] (qvd); ENDIF;
	IF vREMOVE and NoOfRows('$(vTABLE)') > 0 THEN; DROP Table [$(vTABLE)]; ENDIF; CALL DropVars('vTABLE, vREMOVE, vDATEFIELD, vNEWTABLE');	
ENDSUB
//*********************************************************************************************************************************************************
//	14.	Заполнение пустых значений в таблице vTable полей vFields значением vValue
//*********************************************************************************************************************************************************
SUB FillEmptyValues(vTABLE, vFIELDS, vVALUE,   vFields,vValue,vCounter,vString,vCurField,vОбъектСсылка); $(vCheckTable);
	IF NoOfRows('$(vTABLE)') > 0 THEN;  
		vОбъектСсылка = If(vTABLE like '# *',  SubField(vTABLE, ' ', 2), SubField(vTABLE, '.', 2)); 
		IF FieldNumber('$(vОбъектСсылка).Ссылка', '$(vTABLE)') > 0 THEN; 
			Concatenate([$(vTABLE)]) LOAD '00000000000000000000000000000000' as [$(vОбъектСсылка).Ссылка] AutoGenerate 1;
			Concatenate([$(vTABLE)]) LOAD '' as [$(vОбъектСсылка).Ссылка] AutoGenerate 1;
		ENDIF
		vFields 	= If(Len(vFIELDS) = 0, 0, vFIELDS);
		vValue 		= If(Len(vVALUE) = 0, '', vVALUE); 
		vString 	= ''; 
		FOR vCounter = 1 TO NoOfFields('$(vTABLE)')  
		    vCurField = FieldName($(vCounter), '$(vTABLE)');
		    vString = vString &', '&chr(13)& If(WildMatch(vCurField, '$(vFields)') or vFields = 0, 'If(Len(Trim([$(vCurField)])) = 0, ''$(vValue)'', [$(vCurField)]) as [$(vCurField)]', '[$(vCurField)]');
		NEXT 
	    vString = Right(vString, Len(vString) - 2);  
	    [$(vTABLE)_2]: NoConcatenate LOAD $(vString) Resident [$(vTABLE)]; DROP Table [$(vTABLE)]; RENAME Table [$(vTABLE)_2] to [$(vTABLE)];
    ENDIF; CALL DropVars('vTABLE, vFIELDS, vVALUE');
ENDSUB
//*********************************************************************************************************************************************************
//	17.	Добавление типа регистратора. 
//*********************************************************************************************************************************************************
SUB AddRecorderType(vTABLE, vFIELD, vCounter, vCurField) 
	[TEMP]: LOAD Distinct Keepchar([ИмяХранения], '0123456789') as [ТипРегистратора],[Синоним] as [ИмяРегистратора] Resident [MetaTable] Where WildMatch([ИмяХранения], '_document*', '_Reference*') and not [ИмяХранения] like '_*_*';
	IF Len(vFIELD) = 0 THEN
		FOR vCounter = 0 TO NoOfFields('$(vTABLE)') - 1  
		    vCurField = FieldName($(vCounter), '$(vTABLE)');
		    IF 	WildMatch(vCurField, '*РегистраторТип', '*TRef') THEN
				Left Join([$(vTABLE)]) LOAD [ТипРегистратора] as [$(vCurField)], [ИмяРегистратора] as [ИмяРегистратора$(vCounter)]  Resident [TEMP];
				DROP Field [$(vCurField)] From [$(vTABLE)]; RENAME Field [ИмяРегистратора$(vCounter)] to [$(vCurField)];
			ENDIF
		NEXT
	ELSE
		Left Join([$(vTABLE)]) LOAD [ТипРегистратора] as [$(vFIELD)], [ИмяРегистратора] Resident [TEMP];
		CALL RenameField('ИмяРегистратора', '$(vFIELD)', '$(vTABLE)'); 
	ENDIF
	DROP Tables [TEMP]; CALL DropVars('vTABLE, vFIELD');
ENDSUB
//*********************************************************************************************************************************************************
//	18.	Добавление типа регистратора. 
//*********************************************************************************************************************************************************
SUB AddObjectType(vTable, vType, vFields_41) 
	vType	= If(vType = 0 or len(vType) = 0, '[Представление]', '[Синоним]');
	[Table_41]: LOAD Distinct Keepchar([ИмяХранения], '0123456789') as [ТипРегистратора], $(vType) as [ИмяРегистратора] Resident [MetaTable] Where WildMatch([ИмяХранения], '_document*', '_Reference*') and not [ИмяХранения] like '_*_*';
	IF Len(vField) = 0 or vField = 0 THEN
		FOR vCounter_41 = 0 TO NoOfFields('$(vTable)') - 1  
		    vCurrentField = FieldName($(vCounter_41), '$(vTable)');
		    IF 	WildMatch(vCurrentField, '*РегистраторТип', '*TRef') THEN
				Left Join([$(vTable)]) LOAD [ТипРегистратора] as [$(vCurrentField)], [ИмяРегистратора] as [ИмяРегистратора$(vCounter_41)]  Resident [Table_41];
				DROP Field [$(vCurrentField)] From [$(vTable)]; RENAME Field [ИмяРегистратора$(vCounter_41)] to [$(vCurrentField)];
			ENDIF
		NEXT
	ELSE
		vFields_41 = Trim(If(Left(vFields_41, 1) = ',', Right(vFields_41, Len(vFields_41)-1), vFields_41));
		FOR vCounter_41 = 1 to SubStringCount(vFields_41, ',') + 1 
			vField_41 = Trim(SubField(vFields_41, ',', vCounter_41)) 
			Left Join([$(vTable)]) LOAD [ТипРегистратора] as [$(vField_41)], [ИмяРегистратора] Resident [Table_41];
			DROP Field [$(vField_41)] From [$(vTable)]; RENAME Field [ИмяРегистратора] to [$(vField_41)];
		NEXT		
	ENDIF
	DROP Tables [Table_41]; vCounter_41 = Null(); vCurrentField = Null();
ENDSUB 
//*********************************************************************************************************************************************************
//	19.	Добавление перечислений к таблице vTable. 
//*********************************************************************************************************************************************************
SUB AddEnumes(vTABLE, vENUMES,    vEnumes, vEnume, vCounter, vField); 					
	vEnumes = Trim(If(Left(vENUMES, 1) = ',', Right(vENUMES, Len(vENUMES) - 1), '')); 	
	IF Len(vEnumes) > 0 THEN; 
		FOR vCounter = 1 to SubStringCount(vEnumes, ',') + 1  
		    vEnume = Trim(SubField(SubField(vEnumes, ',', vCounter), '-', 1));			
		    vField = Trim(SubField(SubField(vEnumes, ',', vCounter), '-', 2));			
		    Left Join([$(vTABLE)]) LOAD [EnumeTable.Синоним] as [Synonym], [EnumeTable.Порядок] as [$(vField)] Resident [EnumeTable] Where [EnumeTable.Перечисление] = Replace('$(vEnume)', 'Перечисление.', '');
		    DROP Field [$(vField)] From [$(vTABLE)]; RENAME Field [Synonym] to [$(vField)];
		NEXT
	ENDIF; CALL DropVars('vTABLE, vENUMES');
ENDSUB 
//*********************************************************************************************************************************************************
//	19-1.	Добавление типов к таблице vTable. 
//*********************************************************************************************************************************************************
SUB AddTypes(vTable, vTypeFields)  
	vTypeFields = Trim(If(Left(vTypeFields, 1) = ',', Right(vTypeFields, Len(vTypeFields) - 1), vTypeFields)); 
	[Table.19]: LOAD Distinct Keepchar([ИмяХранения], '0123456789') as [Type], [Синоним] as [Synonym] Resident [MetaTable] Where WildMatch([ИмяХранения], '_document*', '_Reference*') and not [ИмяХранения] like '_*_*';
	IF Len(vTypeFields) > 0 THEN
		FOR vCounter.19 = 1 to SubStringCount(vTypeFields, ',') + 1  
		    vField 	= Trim(SubField(vTypeFields, ',', vCounter.19));
		    Left Join([$(vTable)]) LOAD [Type] as [$(vField)], [Synonym] Resident [Table.19]; DROP Field [$(vField)] From [$(vTable)]; RENAME Field [Synonym] to [$(vField)]; 
		NEXT
	ENDIF;  Drop Table [Table.19]; vCounter.19 = Null(); //vLastTable = TableName(NoOfTables()-1); DROP Table [$(vLastTable)];
ENDSUB 
//*********************************************************************************************************************************************************
//	20.	Загрузка календаря. 
//*********************************************************************************************************************************************************
SUB Calendar(vSTART,vEND,vTABLE,vTYPE,   vTable,vDecade,vCorpWeek,vSpace,vNielsen,vLanguage,vPeriod,vPeriodsRu,vPeriodsEn,MonthsOld,DaysOld,vP,П1,П2,T1,T2,К1,К2,М1,М2,Д2,Н1,Н2) 
	vTABLE 		= If(Len(Trim(vTABLE)) = 0, 'Календарь', vTABLE);
	vSTART 		= If(Len(Trim(vSTART)) = 0, Date('01.01.2001'), Date(vSTART));
	vEND		= If(Len(Trim(vEND))   = 0, Date(YearEnd(Today(), 1)), Date(vEND));
	vTYPE		= If(Len(Trim(vTYPE))  = 0, 111, Num(Left(vTYPE & '000', 3))); 
	vLanguage	= Mid(vTYPE, 2, 1);
	vDecade 	= 'if(Day(Дата) < 11, 1, if(Day(Дата) > 10 and Day(Дата) < 21, 2, 3))'; 
	vCorpWeek 	= 'AutoNumber(If(Week(Дата-4) = Week(YearEnd(Дата-4)) and Floor(YearEnd(Дата-4)) - Floor(WeekStart(Дата-4)-1) < 7, 1, Week(Дата-4)), Year(Дата) & Month(Дата))';
	vNielsen	= 'Dual(Pick(Match(Num(Month(Дата)), 1,2,3,4,5,6,7,8,9,10,11,12), ''DJ'',''FM'',''FM'',''AM'',''AM'',''JJ'',''JJ'',''AS'',''AS'',''ON'',''ON'',''DJ''), If(Num(Month(Дата)) = 1, 6, floor(Num(Month(Дата)) / 2)))';
	vSpace		= If(Mid(vTYPE, 3, 4) = 1, ' ', ' - ');
	vPeriodsRu	= '''Полугодие'', ''Триместр'', ''Квартал'', ''Месяц'', ''Декада'', ''Неделя''';
	vPeriodsEn	= '''Semester'', ''Trimester'', ''Quarter'', ''Month'', ''Decade'', ''Week''';
	MonthsOld	= MonthNames; MonthNames	= If(vLanguage = 2, 'Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec', 'янв;фев;мар;апр;май;июн;июл;авг;сен;окт;ноя;дек');
	DaysOld		= DayNames; DayNames = If(vLanguage = 2, 'Mon;Tue;Wed;Thu;Fri;Sat;Sun', 'Пн;Вт;Ср;Чт;Пт;Сб;Вс');

	[TEMP]: LOAD *, [Дата] as [Date]; LOAD Date('$(vSTART)' + IterNo() - 1) as [Дата] AutoGenerate 1 While Date('$(vSTART)' + IterNo() - 1) < '$(vEND)';
//	TRACE >>>>>>>>>>>>>> $(vTYPE);
	
	IF Left(vTYPE, 1) > 0 THEN
		Left Join(TEMP) [JOIN]: LOAD 													   	   [Дата],
			Year(Дата) 																		as [Год],
			Year(Дата) &' '& Dual(Month(Дата), 	Month(Дата))								as [ГодМесяц],
			Dual(Month(Дата), 	Month(Дата)) &' '& Year(Дата)  								as [МесяцГод],
			Dual(Month(Дата), 	Month(Дата)) 												as [Месяц],
			Dual(WeekDay(Дата), WeekDay(Дата)) 												as [ДеньНедели],
			Day(Дата) 																		as [Число]	 
		Resident [TEMP]; CALL RenameTable;
	ENDIF; IF Left(vTYPE, 1) > 1 THEN
		FOR Each vPeriod in $(vPeriodsRu); vP = Left(vPeriod, 1); vPeriod = If(vLanguage = 2, Pick(Match(vPeriod, $(vPeriodsRu)), $(vPeriodsEn)), vPeriod); [$(vP)1] = Pick(Match(Mid(vTYPE, 3, 1), 1, 2), '', Left(vPeriod, 1)); [$(vP)2] = Pick(Match(Mid(vTYPE, 3, 1), 1, 2), ' '& Lower(vPeriod), ''); NEXT
		Left Join(TEMP) [JOIN]: LOAD 													       [Дата],
			'$(П1)' & Ceil(Num(Month(Дата), '0') / 6)						& '$(П2)'		as [Полугодие],
			'$(T1)' & Ceil(Month(Дата)/4) 									& '$(T2)'		as [Триместр], 
			'$(К1)' & Ceil(Num(Month(Дата), '0') / 3) 						& '$(К2)'		as [Квартал],
			'$(М1)' & Num(Month(Дата), '00') 								& '$(М2)'		as [НомерМесяца],
			'$(Д1)' & $(vDecade) 											& '$(Д2)'		as [Декада],
			'$(Н1)' & Num(Week(Дата), '00')									& '$(Н2)'		as [НеделяГода],
			'$(Н1)' & AutoNumber(Week(Дата), Year(Дата) & MonthName(Дата)) 	& '$(Н2)'		as [НеделяМесяца],
			'$(Н1)' & $(vCorpWeek) 											& '$(Н2)'		as [НеделяКорпоративная]
		Resident [TEMP]; 
		Left Join(TEMP) [JOIN]: LOAD													       [Дата],
			[Год] & '$(vSpace)' & [Полугодие]												as [ГодПолугодие],
			[Год] & '$(vSpace)' & [Триместр]												as [ГодТриместр], 
			[Год] & '$(vSpace)' & [Квартал]													as [ГодКвартал], 
			[Год] & '$(vSpace)' & [НомерМесяца]												as [ГодНомерМесяца],  
			[Год] & '$(vSpace)' & [НеделяГода]												as [ГодНеделяГода],  
			[МесяцГод] & ' - ' 	& [Декада]													as [МесяцГодДекада], 
			[МесяцГод] & ' - ' 	& [НеделяМесяца]											as [МесяцГодНеделяМесяца], 
			[МесяцГод] & ' - ' 	& [НеделяКорпоративная]										as [МесяцГодНеделяКорпоративная]
		Resident [TEMP]; 		
	ENDIF; IF Left(vTYPE, 1) > 3 THEN
		Left Join(TEMP) [JOIN]: LOAD 													   [Дата],
	 		Dual([Год] & ' ' & $(vNielsen), [Год] & If(Num(Month(Дата)) = 1, 6, floor(Num(Month(Дата)) / 2))) as [ГодДваМесяца]
		Resident [TEMP]; CALL RenameTable;
	ENDIF; 
	MonthNames = MonthsOld; DayNames = DaysOld;
	CALL RenameTable('TEMP', '$(vTABLE)'); CALL DropVars('vSTART,vEND,vTABLE,vTYPE'); 
ENDSUB
//*********************************************************************************************************************************************************
//	21.	Календарь остатков.
//*********************************************************************************************************************************************************
SUB BalanceCalendar
	[КалендарьОстатков]: LOAD Дата, Year(Дата) & Num(Month(Дата)) as [ГодМесяц] Resident Календарь; Left Join LOAD [ГодМесяц], Дата as [Период] Resident [КалендарьОстатков]; 
	Inner Join LOAD Дата, [Период], If(Дата = Период, 0, 1) as ТипДней Resident [КалендарьОстатков] Where Дата >= [Период]; DROP Field ГодМесяц From [КалендарьОстатков];
ENDSUB
//*********************************************************************************************************************************************************
//	23.	Разделение сплошной стороки vString на слова, если они наыинаются с заглавной буквы.
//*********************************************************************************************************************************************************
SUB CutWords(vString)
    IF Len(vString) > 0 THEN; vOut = Mid(vString, 1, 1); FOR i = 2 To Len(vString); 
    vChar = Mid(vString, i, 1); vOut = vOut & If(vChar = Upper(vChar), ' ' & Lower(vChar), vChar); NEXT; vString = vOut; vOut = Null(); ENDIF
ENDSUB
//*********************************************************************************************************************************************************
//	24.	Разделение сплошной стороки vString на слова, если они наыинаются с заглавной буквы.
//*********************************************************************************************************************************************************
SUB JoinWords(vString)
    IF Len(vString) > 0 THEN; vOut = Upper(Mid(vString, 1, 1)); vUpper	= 0; FOR i = 2 To Len(vString)
	vChar = Mid(vString, i, 1); vOut = vOut & If(vChar = ' ',  '', If(vUpper, Upper(vChar), vChar)); vUpper	= If(vChar = ' ', 1, 0); NEXT; vJoinWords = vOut; vOut = Null(); vUpper = Null(); ENDIF
ENDSUB
//*********************************************************************************************************************************************************
//	25.	Загрузка объектов метаданных из базы sql по предустановленным значениям.
//*********************************************************************************************************************************************************
SUB ComonSelect(vSELECTNO,   vFirstObject,vCounter)	
	NoConcatenate [GrandTable]: LOAD ИмяТаблицыQV, RowNo() as [ObjectNo] Resident [MetaTable] Where WildMatch([Назначение], 'ТабличнаяЧасть', 'Основная', 'Итоги', 'НастройкиХраненияИтогов*') and [Select$(vSELECTNO)] >= 0 and [КоличествоСтрок] > 0 ; //, 'РегистрСведений.*' 'Справочник.*' and WildMatch([ИмяТаблицы], 'РегистрСведений.*')  and not WildMatch([ИмяТаблицыQV], 'Р*', 'Д*', 'Ж*', 'З*', 'Б*', 'П*')
	vFirstObject = Lookup('ObjectNo', 'ИмяТаблицыQV', 'Справочник.КодыВалютныхОпераций_', [GrandTable]);  //УсловияТруда  КодыВалютныхОпераций  ФизическиеЛицаПрисоединенныеФайлы ШтатноеРасписание
   	FOR vCounter = 0 to NoOfRows('GrandTable') - 1 
   		IF Peek('ObjectNo', $(vCounter), 'GrandTable') > vFirstObject or Len(vFirstObject) = 0 THEN; CALL Select(Peek('ИмяТаблицыQV', $(vCounter), 'GrandTable'), '$(vSELECTNO)'); ENDIF
	NEXT; DROP Table [GrandTable]; CALL DropVars('vSELECTNO');
ENDSUB
//*********************************************************************************************************************************************************
//	26.	Генерирует произвольное значение и присваивает его переменной vRandom.
//*********************************************************************************************************************************************************
SUB GetRandom
	vRandom = Ceil(RAND()*100) +0*Now(1);
ENDSUB
//*********************************************************************************************************************************************************
//	28.	Загрузка таблицы vTable из QVD файла. vFields: 0 - все поля, 1 - указанные в Метаданных с необходимыми названиями.
//*********************************************************************************************************************************************************
SUB Load(vTABLE,vLOADTYPE,vMASTERTABLE,vLEVEL,		vObject_1,vObject_2,vObject_A1,vObject_B2,vMasterObject_1,vMasterObject_2,vMasterObject_B2,vMasterFields,vMasterField,vMasterKey,vSLAVELIST,vFieldList,vMark,vString,vExists,vRowNo,vFieldName,vSlaveList,vFieldType,vSynonym,vSlaveKey,vTable,vValue,vDateField) 
	CALL DropVars('vString,vSlaveList,vFieldList,vLimitDate');
	
	vTABLE					= If(SubStringCount(vQvdFiles, vTABLE & '.qvd') = 0 and SubStringCount(vTABLE, '*') = 0, vTABLE & ' *', vTABLE);
	vLOADTYPE				= If(not Match(vLOADTYPE, 'Master', 'Child', 'Slave', 'Append', 'Leftjoin', 'OuterJoin'), 'Master', vLOADTYPE)
	vLEVEL 					= If(Len(Trim(vMASTERTABLE)) = 0, 1, vLEVEL); 
	vModel					= If(not Match(vLOADTYPE, 'Master', 'Child', 'Slave', 'Append', 'Leftjoin', 'OuterJoin'), vLOADTYPE, vModel)
	vObject_1 				= SubField(vTABLE, '.', 1);
	vObject_2 				= SubField(SubField(vTABLE, '.', 2), ' ', 1);
	vObject_A1 				= Right(vTABLE, Len(vTABLE) - Index(vTABLE, '.', 1));
	vObject_B2 				= If(SubStringCount(vTABLE, '.') > 1, Left(vTABLE, Index(vTABLE, '.', 2) -1), SubField(vTABLE, ' ', 1));
	vMasterObject_1 		= SubField(vMASTERTABLE, '.', 1);
	vMasterObject_2 		= SubField(SubField(vMASTERTABLE, '.', 2), ' ', 1);
	vMasterObject_B2 		= If(SubStringCount(vMASTERTABLE, '.') > 1, Left(vMASTERTABLE, Index(vMASTERTABLE, '.', 2) -1), SubField(vMASTERTABLE, ' ', 1));

	vMasterFields			= Trim(Lookup('FieldList', 'Table', vMASTERTABLE, 'Tables'));
	vSLAVELIST				= Lookup('SlaveList', 'Table', vMASTERTABLE, 'Tables');
	vMasterKey				= SubField(SubField(vMasterFields, vObject_B2, 1), ';', -2);
	vMasterField			= SubField(SubField(vMasterFields, vObject_B2, 2), ';',  2); 																															//TRACE ============ vMasterKey = $(vMasterKey), vMasterField = $(vMasterField);
	
	vTableExists			= If(IsNull(Lookup('Table', 'Table', '$(vTABLE)', 'Tables')), 0, 1);
	vDateField 				= If(vTABLE like 'Документ.*', 'Дата', 'Период'); 
	vMark					= Replace(vTABLE, ' ', '');
	vBalance				= If(vBalance = 1, 1, If(vTABLE like '*.Остатки' and vTABLE like SubField(vMASTERTABLE, ' ') &'.*', 1, 0));
	vTable					= If(vTableExists, vTABLE &' ('& vMasterObject_2 &')', vTABLE);
	
	IF SubStringCount(Left(vSLAVELIST, Index(vSLAVELIST, Chr(13), -1)), vTABLE) > 0 THEN; //vString  = '[' & vObject_2 & '.Ссылка] as [$(vMasterKey)], [' & vObject_2 & '.Наименование] as [' & vMasterObject_2 &'.'& vObject_A1 & ']'; [$(vTable)]: LOAD $(vString) From [$(vRootPath)\$(vTABLE).qvd] (qvd);
	ELSE; 																																																			//TRACE =================== Полная загрузка  $(vTABLE) << $(vLEVEL) >>;
		[Header]: LOAD Distinct FieldName, Comment FROM [$(vRootPath)\$(vTABLE).qvd] (XmlSimple, Table is [QvdTableHeader/Fields/QvdFieldHeader]);
		FOR vRowNo = 0 to NoOfRows('Header') 
			vFieldName		= Peek('FieldName', $(vRowNo));
			vFieldType		= SubField(SubField(Peek('Comment', 	$(vRowNo)), Chr(10), 1), ': ', 2);
			vSynonym		= SubField(SubField(Peek('Comment', 	$(vRowNo)), Chr(10), 2), ': ', 2); 
			vSlaveKey		= If(vObject_1 = 'Справочник', vObject_2 & '.', '') & SubField(vFieldType, '.', 2) & '.Ссылка'; 																						//TRACE ==============	'$(vFieldName)'  '$(vFieldType)'  '$(vSynonym)' '$(vSlaveKey)';		

			vNewName		= If(Match(vFieldType, 'Дата', 'Число', 'Строка') and Len(Trim(vSynonym)) > 0 and not Match(vSynonym, 'Родитель', 'Ссылка'), vSynonym, vFieldName); 									//TRACE ==============	'$(vNewName)';		
			vNewName		= If(WildMatch(vFieldType, 'Справочник.*', 'Документ.*') and vFieldType <> vObject_B2 and vFieldName like '*.Ссылка', vSlaveKey, vNewName);												//TRACE ==============	'$(vNewName)';		
			vNewName		= If(vObject_1 = 'Справочник' and vSynonym = 'Наименование' and Len(vMasterField) > 0, vMasterField, vNewName); 																		//TRACE ==============	'$(vNewName)';		
			vNewName		= If(not IsNull(FieldValueCount('$(vNewName)')) and not Match(vNewName, 'Дата'), vNewName &' ('& vMasterObject_2 &')', vNewName);  														//TRACE ==============	'$(vNewName)';		
			vNewName		= If(Match(vLOADTYPE, 'Child', 'Slave') and vFieldName = vObject_2 & '.Ссылка', vMasterKey, vNewName); 																					//TRACE ==============	'$(vNewName)';		
			vNewName		= If(vObject like 'Регистр*' and vFieldName like '*.ВидДвижения',  'ВидДвижения', vNewName);
			vNewName		= If(vLOADTYPE = 'Append' and 	  vTABLE like vMasterObject_B2 &'.Остатки*', Subfield(SubField(vMasterFields, Replace(vFieldName, '.Остатки', ''), 2), ';', 2), vNewName); 				//TRACE ==============	'$(vNewName)';

			vNewName		= If(vLOADTYPE = 'Append' and not vTABLE like vMasterObject_B2 &'.Остатки*', Subfield(SubField(vMasterFields, Replace(vFieldName, vObject_2, vMasterObject_2), 2), ';', 2), vNewName); 	//TRACE ==============	'$(vNewName)';
			vNewName		= If(Len(Trim(vNewName)) = 0, If(not IsNull(FieldValueCount('$(vSynonym)')), vFieldName, vSynonym), vNewName); 																			//TRACE ==============	'$(vNewName)';

			vString			= vString & If(Len(Trim(vFieldName)) > 0, '[' & vFieldName & '] as [' & vNewName & '],' & Chr(13), '');
			vSlaveList		= vSlaveList & If(WildMatch(vFieldType, 'Справочник.*', 'Документ.*') and vFieldName like '*.Ссылка' and vSynonym <> 'Ссылка' and IsNull(Lookup('FieldName', 'FieldName', Replace(vFieldName, '.Ссылка', ''), 'Header')) and If(vLOADTYPE = 'Append' and not IsNull(TableNumber('$(vFieldType)')), False(), True()), ',''' & vFieldType & ';' & vSynonym & ';' & vNewName & '''', ''); 
			vFieldList		= vFieldList & vFieldName &';'& vNewName &';'& vFieldType &';'& vSynonym  &';'& Chr(13);
			vFields 		= vFields & If(not WildMatch(vFieldName, '*.Ссылка') and Len(Trim(vFieldType)) > 0 and IsNull(FieldValueCount('$(vNewName)')), vTABLE &';'& vNewName &';'& vFieldType &';'& Chr(13), ''); 			// Поля для измерений и выражений

		NEXT; 	DROP Table [Header]; 																																												//TRACE ==============	'$(vFields)';
		vString				= Left(Trim(vString), len(Trim(vString)) - 1) & If(vTABLE like '*.Остатки' and vTABLE like SubField(vMASTERTABLE, ' ') &'.*', ','& Chr(13) &'0 as [ВидДвижения]', '');
		vSlaveList 			= Right(Trim(vSlaveList), len(Trim(vSlaveList)) - 1);
		vFieldList			= Trim(vFieldList);
		IF vPeriodEnabled and WildMatch('$(vString)', '*[$(vObject_A1).$(vDateField)] as *') THEN; 
			Left Join(Календарь) LOAD Дата, Дата as [$(vObject_A1).$(vDateField)] Resident Календарь;
			vLimitDate  = 'Where Exists([$(vObject_A1).$(vDateField)])';  
		ENDIF;
		
		Tables: LOAD '$(vModel)' as Model, '$(vTable)' as Table, '$(vFieldList)' as FieldList, '$(vSLAVELIST)' &','& '$(vSlaveList)' as SlaveList, '$(vLEVEL)' as Level AutoGenerate 1;
		[$(vTable)]: LOAD $(vString) From [$(vRootPath)\$(vTABLE).qvd] (qvd) $(vLimitDate);
			
		FOR Each vValue in $(vSlaveList); vFieldType = SubField(vValue, ';', 1); IF vFieldType <> vTABLE and FileSize('$(vRootPath)\$(vFieldType).qvd') > 0 THEN; CALL Load('$(vFieldType)', 'Slave', '$(vTABLE)', '$(vLEVEL)' +1); ENDIF; NEXT; 
	 	
		NoConcatenate [TabParts$(vMark)] : LOAD Path as Path.2 Resident QvdPaths Where Path like '$(vRootPath)\'& If(SubStringCount('$(vTABLE)', ' ') > 0, Replace('$(vTABLE)', ' ', '.* '), '$(vTABLE)' & '.*') & '.qvd'; 
					  [TabParts$(vMark)] : LOAD Path as Path.2 Resident QvdPaths Where Path like '$(vRootPath)\'& SubField('$(vTABLE)', ' ', 1) & '.*' & '.qvd' and not Exists (Path.2, Path) and SubStringCount(SubField(Path, '\', -1), ' ') = 0; 
		NoConcatenate [tabParts$(vMark)] : LOAD Distinct If(SubStringCount('$(vTABLE)', '*') > 0, Replace(Replace(Path.2, '1', '*'), '2', '*'), Path.2) as Path.2 Resident [TabParts$(vMark)] Where not SubField(Path.2, '\', -1) like '*.НастройкиХранения*'; CALL RenameTable

		IF NoOfRows('TabParts$(vMark)') > 0 THEN; FOR vRowNo = 0 to NoOfRows('TabParts$(vMark)')-1; CALL Load( SubField(SubField(Peek('Path.2', $(vRowNo), 'TabParts$(vMark)'), '\', -1), '.qvd', 1), If(vObject_1 like 'Регистр*', 'Append', 'Child'), If(vObject_1 like 'Регистр*', '$(vTABLE)', '$(vMASTERTABLE)'), '$(vLEVEL)'); NEXT; ENDIF; DROP Table [TabParts$(vMark)];
		
		IF vLOADTYPE = 'Append' THEN; Concatenate([$(vMASTERTABLE)]) LOAD * Resident [$(vTable)]; DROP Table [$(vTable)]; ENDIF;

	ENDIF; CALL DropVars('vTABLE,vMasterField,vMasterKey,vMASTERTABLE,vSLAVEJOINLIST');
ENDSUB
//*********************************************************************************************************************************************************
//	30.	Получение интервалов и заполнение датами.
//*********************************************************************************************************************************************************
SUB IntervalMatch(vTABLE, vFIELD, vCALENDAR,	vTableName,vNoOfRowsBefore,vNoOfRows); TRACE ------------------------------ IntervalMatch vDateStart '$(vDateStart)'; $(vCheckTable); 
	vTableName = SubField(vTABLE, '.', 2);
	IF FieldNumber(vTableName & '.ПериодВремя', vTABLE) > 0 THEN
		[TEMP]: LOAD *,  If([$(vFIELD)] = Previous([$(vFIELD)]) and Date([$(vTableName).Период]) = Date(Previous([$(vTableName).Период])), 1, 0) as [DELETE] Resident [$(vTABLE)] Order By [$(vFIELD)], [$(vTableName).ПериодВремя] desc; 
		DROP Table [$(vTABLE)]; vNoOfRowsBefore = NoOfRows('TEMP'); Inner Join (TEMP) LOAD 0 as [DELETE] AutoGenerate 1; DROP Fields [DELETE], [$(vTableName).ПериодВремя]; RENAME Table [TEMP] to [$(vTABLE)]; 
		vNoOfRows = NoOfRows('$(vTABLE)') - vNoOfRowsBefore; IF vNoOfRows <> 0 THEN; TRACE;TRACE	?	Количество строк в  $(vTABLE) изменилось на $(vNoOfRows); TRACE; ENDIF
	ENDIF; 
	NoConcatenate [TEMP]: LOAD *, [$(vTableName).Период] as [ДатаНач], If([$(vFIELD)] = Previous([$(vFIELD)]), Date(Previous([$(vTableName).Период])-1), Date(Today() + 100)) as [ДатаКон] Resident [$(vTABLE)] 
	Where not Match('00000000000000000000000000000000', [$(vFIELD)]) and Len([$(vFIELD)]) > 0 Order By [$(vFIELD)], [$(vTableName).Период] desc; DROP Table [$(vTABLE)]; RENAME Table [TEMP] to [$(vTABLE)]; DROP Fields [$(vTableName).Период] From [$(vTABLE)];
	IF vCALENDAR THEN
		[Календарь]: LOAD Date('$(vDateStart)' + IterNo() - 1) as [Дата] AutoGenerate 1 While Date('$(vDateStart)' + IterNo() - 1) <= Date(Today() +100);
		Inner Join(Календарь) IntervalMatch (Дата) LOAD Distinct [ДатаНач], [ДатаКон] Resident [$(vTABLE)]; Inner Join(Календарь) LOAD * Resident [$(vTABLE)]; 
		DROP Fields [ДатаНач], [ДатаКон] From [Календарь]; DROP Table [$(vTABLE)]; RENAME Table [Календарь] to [$(vTABLE)]; 
	ENDIF; CALL DropVars('vTABLE, vFIELD, vCALENDAR');	
ENDSUB
//*********************************************************************************************************************************************************
//	31.	Удаление переменных.
//*********************************************************************************************************************************************************
SUB DropVars(vVars)	
	vVars = Chr(39) & Replace(vVars, ',', Chr(39) & ',' & Chr(39)) & Chr(39); FOR Each DropVar in $(vVars); LET [$(DropVar)] = Null(); NEXT; LET DropVar = Null(); 
ENDSUB
//*********************************************************************************************************************************************************
//	33.	Объединение полей по условию - если в одном поле значение отсутствует, брать из другого.
//*********************************************************************************************************************************************************
SUB UnionFields(vTABLE, 	vString,vCounter,vCurField,vNewField,vOldField)
	vString = ''; 
	FOR vCounter = 1 TO NoOfFields('$(vTABLE)')  
	    vCurField 	= FieldName($(vCounter), '$(vTABLE)');
	    vNewField 	= Upper(Left(vCurField, 1)) & Right(vCurField, Len(vCurField)-1);
	    vOldField 	= Lower(Left(vCurField, 1)) & Right(vCurField, Len(vCurField)-1);
		vString 	= vString & If(vNewField <> vCurField and not IsNull(FieldValueCount('$(vNewField)')), ', If(not IsNull([$(vCurField)]), [$(vCurField)], [$(vNewField)]) as [$(vNewField)]', If(vCurField <> vOldField and not IsNull(FieldValueCount('$(vOldField)')), '', ', [$(vCurField)]'));
	NEXT; vString	= Right(vString, Len(vString) - 2); 
	[$(vTABLE)_2]: NoConcatenate LOAD $(vString) Resident [$(vTABLE)]; DROP Table [$(vTABLE)]; RENAME Table [$(vTABLE)_2] to [$(vTABLE)]; CALL DropVars('vTABLE'); 
ENDSUB
//*********************************************************************************************************************************************************
//	34.	Переимновывание полей в соответствии со списком из файла настроек.
//*********************************************************************************************************************************************************
SUB MapRename(vMAP,	vNo)
	vMAP = If(Len(Trim(vMAP)) = 0, '*', vMAP); vNo = If(Len(Trim(vNo)) = 0, 1, vNo + 1);
	[MapTable.$(vNo)]: Mapping LOAD Existing, Desired FROM [D:\QlikView\Config\Settings.xlsx] (ooxml, embedded labels, table is Mapping) 
		Where Map = '$(vMAP)' and Len(Trim(Desired)) > 0; RENAME Fields using [MapTable.$(vNo)]; CALL DropVars('vMAP');
ENDSUB
//*********************************************************************************************************************************************************
//	35.	Загрузка переменных.
//*********************************************************************************************************************************************************
SUB LoadVariables(vPATH,vSHEET)
	[Variables]:LOAD Variables.Name, Variables.Definition, Action FROM [$(vPATH)] (ooxml, embedded labels, table is $(vSHEET)) Where Len(Trim(Variables.Name)) > 0;
	FOR vCounter = 0 to NoOfRows('Variables') - 1; LET [Variable] = Peek('Variables.Name' , $(vCounter), 'Variables'); LET [$(Variable)] = Peek('Variables.Definition', $(vCounter), 'Variables'); 
	IF Peek('Action', $(vCounter), 'Variables') = 'Calculate' THEN; [$(Variable)] = $($(Variable)); ENDIF; IF Peek('Action', $(vCounter), 'Variables') = 'Run' THEN; Run = $(Variable); $(Run); ENDIF; NEXT; DROP Table [Variables]; 
ENDSUB
//*********************************************************************************************************************************************************
//	36.	Получение списка файлов.
//*********************************************************************************************************************************************************
SUB GetPaths(vDIR,vEXT,vDEPTH,vTABLE,vLEVEL, 	vSubDir,vPath,vExt,vExts);
 	vExts 	= Chr(39)& If(Len(Trim(vEXT)) = 0, '*', Replace(vEXT, ',', Chr(39)& ',' &Chr(39))) &Chr(39);
 	vLEVEL 	= If(Len(Trim(vLEVEL)) = 0, 1, vLEVEL);
 	vDEPTH 	= If(Len(Trim(vDEPTH)) = 0, 1000000, vDEPTH);
 	vTABLE 	= If(Len(Trim(vTABLE)) = 0, 'FilePaths', vTABLE);
 	IF vLEVEL <= vDEPTH THEN
		FOR Each vPath in FileList('$(vDIR)\*.*'); vQvdFiles = vQvdFiles & If(WildMatch(SubField(vPath, '.', -1), $(vExts)), Chr(13) & vPath, ''); NEXT; 
		FOR Each vSubDir in DirList(vDIR & '\*' ); CALL GetPaths(vSubDir,vEXT,vDEPTH,vTABLE,vLEVEL+1); NEXT; 
	ENDIF
	IF vLEVEL = 1 THEN; vQvdFiles = Trim(vQvdFiles); [$(vTABLE)]: LOAD SubField('$(vQvdFiles)', Chr(13)) as Path AutoGenerate 1; vQvdFiles=; ENDIF;
ENDSUB;
//*********************************************************************************************************************************************************
//	37.	Загрузка метаданных из файла excel.
//*********************************************************************************************************************************************************
SUB MetaLoad; 	TRACE >>>>>>>>>>>>>>>>>>>>>> MetaLoad;	
	vPickValue = 'If(Len(Trim($1)) = 0 and Len(Trim(Объект)) = 0, Peek($1), $1) as $1'; 
	[TEMP]: LOAD НомерСтроки, $(vPickValue(Объект)), $(vPickValue(Назначение)), ИмяТаблицыQV, Alt(Select0 *1, -1) as Select0, Alt(Select1 *1, -1) as #Select1, 
	ИмяПоля, ИмяПоляQV, Продажи, Синоним, Представление, ИмяХранения, ТипРеквизита, ИмяХраненияТипа, Префикс, КоличествоСтрок, Проверка, КолТипов, Комментарий 
	FROM [$(vMetaFilePath)] (ooxml, embedded labels, table is Метаданные);	vLoadMetaFile = 0; vPickValue = Null(); 
	INPUTFIELD Select1; NoConcatenate [MetaTable]: LOAD *, #Select1 as Select1 Resident [TEMP] Where Len(Trim(ИмяТаблицыQV)) > 0 Order By НомерСтроки; DROP Table [TEMP];
	QUALIFY *; [EnumeTable]: LOAD Перечисление, Значение, Синоним, Порядок FROM [$(vMetaFilePath)] (ooxml, embedded labels, table is Перечисления); UNQUALIFY *; CALL Exit; 
ENDSUB
//*********************************************************************************************************************************************************
//	38.	Построение таблицы метаданных из переменной.
//*********************************************************************************************************************************************************
SUB MetaBuild; TRACE >>>>>>>>>>>>>>>>>>>>>> MetaBuild;
	vString=; vHeaders = SubField(vMetaTable, Chr(13), 1); 
	FOR vIterNo = 1 to SubStringCount(vHeaders, Chr(9)) +1; vString = vString & 'SubField([Field], Chr(9), ' & vIterNo & ') as ' & SubField(vHeaders, Chr(9), vIterNo) & ',' & Chr(13); NEXT
	vString = Trim(Left(vString, Len(vString) -2)); TRACE vString = '$(vString)'; Temp: LOAD SubField('$(vMetaTable)', Chr(13)) as Field AutoGenerate 1; 
	[MetaTable]: LOAD $(vString) Resident Temp Where not Field like '*[Объект]*' and len(Trim(Replace(Field, '-1', ''))) > 0; Drop Table [Temp]; 

	vString=; vHeaders = 'EnumeTable.Перечисление' &Chr(9)& 'EnumeTable.Значение' &Chr(9)& 'EnumeTable.Синоним' &Chr(9)& 'EnumeTable.Порядок'; 
	FOR vIterNo = 1 to 4; vString = vString & 'SubField([Field], Chr(9), ' & vIterNo & ') as ' & SubField(vHeaders, Chr(9), vIterNo) & ',' & Chr(13); NEXT
	vString = Trim(Left(vString, Len(vString) -2)); TRACE vString = '$(vString)'; Temp: LOAD SubField('$(vEnumeTable)', Chr(13)) as Field AutoGenerate 1; 
	[EnumeTable]: LOAD $(vString) Resident Temp; Drop Table [Temp]; 

	IF vEditTable THEN; DROP Field [#Select1]; RENAME Field Select1 to [#Select1]; INPUTFIELD Select1; [metaTable]: LOAD *, [#Select1] as [Select1] Resident [MetaTable]; CALL RenameTable; CALL Exit; ENDIF;
ENDSUB
//*********************************************************************************************************************************************************
//	39.	Выполнение процедур в модуле.
//*********************************************************************************************************************************************************
SUB Execute(vList); $(vTrace(Execute, >));
	IF Match(vSelectTypeCR, 'Random script') THEN; CALL $(vRandomScript); ELSEIF Len(Trim(vSubList)) = 0 THEN; ELSE; vList = ''''& Replace(vSubList, ';', ''',''') &''''; FOR Each vSub in $(vList); CALL $(vSub); NEXT; ENDIF;
ENDSUB
//*********************************************************************************************************************************************************
//	99.	Завершение загрузки - удаление временных объектов и выход из скрипта.
//*********************************************************************************************************************************************************
SUB  Exit	
	CALL DropVars('vDateStart,vDateEnd,vDateAdd,vDateSplit,vConString,vMetaData,vNotEmpty,vGpsConvert,vGpsDistance,vLoadType,vLoadFlag,vEnumeData,vCheckTable,vTrace'); EXIT SCRIPT;
ENDSUB

[SelectTypeCR]: LOAD SubField('Select & script,Comon select,Comon script,Random select,Random script,None', ',') as SelectTypeCR AutoGenerate 1;
[SelectType01]: LOAD SubField('Select 0,Select 1', ',') as SelectType01 AutoGenerate 1;
[LoadType]: LOAD SubField('Default,Full,Night,Day', ',') as LoadType AutoGenerate 1;

IF vRebuild THEN; CALL MetaLoad; ELSE; CALL MetaBuild; ENDIF
$(vConString);
 
IF WildMatch(vSelectTypeCR, 'Select*', 'C* select') THEN; CALL ComonSelect(SubField(vSelectType01, ' ', 2)); ENDIF;
IF WildMatch(vSelectTypeCR, 'R* select')			THEN; CALL Select('$(vRandomObject)', SubField(vSelectType01, ' ', 2), '$(vRandomSave)'); ENDIF;
IF vSelectTypeCR like '*cript*' 					THEN; ELSE; CALL Exit; ENDIF; //Just test
